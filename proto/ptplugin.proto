syntax = "proto3";

package ptplugin;

message Diagnostic {
    enum Severity {
        ERROR = 0;
        WARNING = 1;
        INFO = 2;
    }
    Severity severity = 1;
    string summary = 2;
    string detail = 3;
}

message StepRunner {
    string name = 1;
    string description = 2;
    string version = 3;
    string type = 4;
    repeated string subscriptions = 5;
}

// The `bytes` field contains the encoded information, encoded as a msgpack
// message of the `PatuiStepData` type.
message PatuiStepData {
    bytes bytes = 1;
}

message GetInfo {
    message Request {}
    message Response {
        StepRunner step_runner = 1;
    }
}

message GetStepRunner {
    message Request {
        string name = 1;
    }
    message Response {
        StepRunner step_runner = 1;
    }
}

message Init {
    message Request {
        string                  step_name = 1;
        map<string, StepRunner> step_runners = 2;
        map<string, string>     config = 3;
    }
    message Response {
        repeated Diagnostic diagnostics = 1;
    }
}

message Run {
    message Request {
    }
    message Response {
    }
}

message Subscribe {
    message Request {
        string name = 1;
    }
    message Response {
        PatuiStepData       data = 1;
        repeated Diagnostic diagnostics = 2;
    }
}

message Wait {
    message Request {
    }
    message Response {
        repeated Diagnostic diagnostics = 2;
    }
}

service PluginService {
    rpc GetInfo(GetInfo.Request) returns (GetInfo.Response) {}
    rpc GetStepRunner(GetStepRunner.Request) returns (GetStepRunner.Response) {}
    rpc Init(Init.Request) returns (Init.Response) {}
    rpc Run(Run.Request) returns (Run.Response) {}
    rpc Subscribe(Subscribe.Request) returns (stream Subscribe.Response) {}
    rpc Wait(Wait.Request) returns (Wait.Response) {}
}
